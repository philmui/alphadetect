# AlphaDetect Environment Configuration
# Copy this file to .env and adjust the values as needed

# ===== DATABASE CONFIGURATION =====
# SQLite (default for development)
ALPHADETECT_DB_URL=sqlite:///./alphadetect.db

# PostgreSQL (recommended for production)
#ALPHADETECT_DB_URL=postgresql+psycopg://postgres:alphadetect@postgres:5432/alphadetect
POSTGRES_PASSWORD=alphadetect
POSTGRES_USER=postgres
POSTGRES_DB=alphadetect

# ===== STORAGE CONFIGURATION =====
# Base directories for file storage
ALPHADETECT_STORAGE_DIR=./outputs
ALPHADETECT_UPLOAD_DIR=./uploads
ALPHADETECT_MAX_UPLOAD_MB=4096

# ===== SERVER CONFIGURATION =====
ALPHADETECT_HOST=0.0.0.0
ALPHADETECT_PORT=8000
ALPHADETECT_WORKERS=1
ALPHADETECT_LOG_LEVEL=INFO
ALPHADETECT_RELOAD=true

# ===== SECURITY CONFIGURATION =====
# Generate a strong secret key for production!
ALPHADETECT_SECRET_KEY=change_this_to_a_strong_secret_key_in_production
ALPHADETECT_CORS_ORIGINS=http://localhost:3000,http://frontend:3000

# ===== ALPHAPOSE CONFIGURATION =====
ALPHADETECT_CLI_PATH=cli/detect.py
ALPHADETECT_DEFAULT_DETECTOR=yolox-x
ALPHADETECT_DEFAULT_CONFIG=configs/coco/resnet/256x192_res50_lr1e-3_1x.yaml
ALPHADETECT_DEFAULT_CHECKPOINT=pretrained_models/fast_res50_256x192.pth

# ===== REDIS CONFIGURATION (for task queue) =====
ALPHADETECT_REDIS_URL=redis://redis:6379/0
REDIS_PASSWORD=alphadetect

# ===== FRONTEND CONFIGURATION =====
NEXT_PUBLIC_API_URL=http://localhost:8000

# ===== DOCKER/DEPLOYMENT CONFIGURATION =====
# Options: development, production
DOCKER_TARGET=development
NODE_ENV=development
HTTP_PORT=80
HTTPS_PORT=443

# ===== GPU CONFIGURATION =====
# Set to -1 for CPU only, or 0,1,2,etc. for specific GPUs
ALPHADETECT_GPU_IDS=0

# ===== OPTIONAL FEATURES =====
# Enable/disable features (true/false)
ALPHADETECT_ENABLE_3D=false
ALPHADETECT_ENABLE_TRACKING=true
